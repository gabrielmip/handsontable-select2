{"version":3,"file":"ht-select2.js","sources":["../node_modules/tslib/tslib.es6.js","../library/adapter.ts","../library/helper.ts","../library/editor.ts","../library/renderer.ts","../library/registry.ts","../library/hook.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import jQuery from 'jquery';\n\n/**\n * Default adapters used by select2.\n *\n * @author Oleksandr Dakal <oleksandr-dakal@project-kit.org>\n */\nconst adapter: any = {\n  get DataBase(): any {\n    return jQuery.fn.select2.amd.require('select2/data/base');\n  },\n  get DataArray(): any {\n    return jQuery.fn.select2.amd.require('select2/data/array');\n  },\n  get DataAjax(): any {\n    return jQuery.fn.select2.amd.require('select2/data/ajax');\n  },\n  get DataTags(): any {\n    return jQuery.fn.select2.amd.require('select2/data/tags');\n  }\n};\n\nexport { adapter as Adapter };\n","import { IdTextPair } from 'select2';\nimport { EditorCell } from './config';\nimport { EditorValue } from './value';\n\n/**\n * Determine the belonging of value to the null or undefined type.\n *\n * @example\n *\n *    isNil(null) // True\n *    isNil(undefined) // True\n *    isNil(0) // False\n *    isNil('') // False\n *\n * @param value The value to check.\n * @return True when value is null-like; false otherwise.\n * @author Oleksandr Dakal <oleksandr-dakal@project-kit.org>\n */\nexport function isNil(value: any): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Determine the belonging of value to the primitive type.\n *\n * @example\n *\n *    isPrimitive({}) // False\n *    isPrimitive([]) // False\n *    isPrimitive(null) // True\n *    isPrimitive('') // True\n *    isPrimitive(0) // True\n *\n * @param value The value to check.\n * @return True when value is primitive category type; false otherwise.\n * @author Oleksandr Dakal <oleksandr-dakal@project-kit.org>\n */\nexport function isPrimitive(value: any): boolean {\n  // Type of value.\n  const valType: string = typeof value;\n\n  // Checking type.\n  return valType === 'string' || valType === 'number' || valType === 'boolean' || isNil(value);\n}\n\n/**\n * Determine the equality of two values without type comparison.\n *\n * @example\n *\n *    isEqual({}, {}) // False\n *    isEqual(null, undefined) // True\n *    isPrimitive(0, '0') // True\n *\n * @param value1 The first value to compare.\n * @param value2 The second value to compare.\n * @return True when values are equal; false otherwise.\n * @author Oleksandr Dakal <oleksandr-dakal@project-kit.org>\n */\nexport function isEqual(value1: any, value2: any): boolean {\n  if (isPrimitive(value1) || isPrimitive(value2)) {\n    return toString(value1) === toString(value2);\n  } else {\n    return value1 === value2;\n  }\n}\n\n/**\n * Convert value to string.\n *\n * @example\n *\n *    toString(0) // '0'\n *    toString(null) // ''\n *    toString(true) // 'true'\n *    toString(undefined) // ''\n *\n * @param value The value to convert.\n * @return Value converted to string.\n * @author Oleksandr Dakal <oleksandr-dakal@project-kit.org>\n */\nexport function toString(value: any): string {\n  if (isNil(value)) {\n    return '';\n  }\n\n  // Do not convert when value already string.\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  // Use string concat to convert.\n  return `${value}`;\n}\n\n/**\n * Editor compatible value.\n *\n * @example\n *\n *    compatValue(null, <prop>) // []\n *    compatValue([2], <prop>) // [2]\n *    compatValue(2, <prop>) // [2]\n *\n * @param value Editor value.\n * @param cellProperties Cell properties.\n * @return Internal compatible value.\n * @author Oleksandr Dakal <oleksandr-dakal@project-kit.org>\n */\nexport function compatValue(value: EditorValue = [], cellProperties: EditorCell): IdTextPair[] {\n  // Getter convert an existing value or return value from another source.\n  const { editorInput = null } = cellProperties;\n\n  // Original value.\n  let val: EditorValue = value;\n\n  // Verify existence of input transformer.\n  if (typeof editorInput === 'function') {\n    val = editorInput(cellProperties);\n  }\n\n  let outputValue: IdTextPair[] = [];\n\n  // Strip null like values.\n  if (!isNil(val)) {\n    if (Array.isArray(val)) {\n      // Clone to avoid value mutability.\n      outputValue = [...val];\n    } else {\n      outputValue = [val];\n    }\n  }\n\n  return outputValue;\n}\n","import jQuery from 'jquery';\nimport Handsontable from 'handsontable';\nimport { IdTextPair, QueryOptions, Options, Event, DataParams, IngParams } from 'select2';\nimport { EditorCell, IdTextPairEvent } from './config';\nimport { Adapter } from './adapter';\nimport { EditorValue } from './value';\nimport { isEqual, compatValue, isNil } from './helper';\n\n/**\n * Editor based on select2 and can activated by HT on edit mode.\n *\n *   □ column:\n *       type: 'select2'\n *\n *   □ column:\n *       editor: 'Select2Editor' | <Editor>\n *\n *   □ cell:\n *       editor: 'Select2Editor' | <Editor>\n *\n * @author Oleksandr Dakal <oleksandr-dakal@project-kit.org>\n */\nexport class Editor extends Handsontable.editors.BaseEditor {\n  /**\n   * Current value.\n   */\n  public value: IdTextPair[];\n\n  /**\n   * Editor options.\n   */\n  public options: Options;\n\n  /**\n   * Original value.\n   */\n  public originalValue: any;\n\n  /**\n   * Cell properties.\n   */\n  public cellProperties: EditorCell;\n\n  /**\n   * TD cell element.\n   */\n  public $TD: JQuery;\n\n  /**\n   * Editor element.\n   */\n  public $editor: JQuery;\n\n  /**\n   * Select element.\n   */\n  public $select: JQuery;\n\n  /**\n   * Create editor root DOM.\n   *\n   * @return Root HTMLElement.\n   */\n  protected static createEditorDOM(): JQuery {\n    // Create editor root.\n    const $root: JQuery = jQuery('<div class=\"select2-editor\"></div>');\n\n    // Create editor content.\n    const $content: JQuery = jQuery('<div class=\"select2-content\"></div>');\n\n    // Stop bubbling to avoid HT deselectOutside.\n    $root.on('mousedown', (event: JQuery.Event): void => {\n      event.stopPropagation();\n    });\n\n    // Append to root.\n    $root.append($content);\n\n    // Editor root.\n    return $root;\n  }\n\n  /**\n   * Create editor select DOM.\n   *\n   * @return Select HTMLElement.\n   */\n  protected static createSelectDOM({ multiple }: Options): JQuery {\n    return jQuery('<select class=\"select2-target\"></select>', { multiple });\n  }\n\n  /**\n   * Editor output value.\n   *\n   * @param value Internal value to output value.\n   * @param cellProperties Cell properties.\n   * @return Output value.\n   */\n  protected static outputValue(value: EditorValue, cellProperties: EditorCell): any {\n    // Verify transformer function existence.\n    if (typeof cellProperties.editorOutput === 'function') {\n      return cellProperties.editorOutput(value, cellProperties);\n    }\n\n    return value;\n  }\n\n  /**\n   * Create event IdTextPair item.\n   *\n   * @param data Base data.\n   * @param selected Selected state.\n   * @return Created item.\n   */\n  protected static createEventItem({ id, text }: any, selected: boolean): IdTextPairEvent {\n    return { id, text, selected };\n  }\n\n  /**\n   * Editor focus.\n   */\n  public focus(): void {\n    this.triggerSelect2Event('focus');\n  }\n\n  /**\n   * Editor prepare.\n   */\n  public prepare(\n    row: number,\n    col: number,\n    prop: string | number | any,\n    TD: HTMLElement,\n    originalValue: any,\n    cellProperties: EditorCell\n  ): void {\n    // Invoke base prepare.\n    super.prepare(row, col, prop, TD, originalValue, cellProperties);\n\n    // Verify options existence which must include data source.\n    if (typeof cellProperties.editorOptions !== 'object') {\n      throw new Error('Editor options is mandatory');\n    }\n  }\n\n  /**\n   * Editor begin editing.\n   *\n   * @param initialValue Init value.\n   */\n  public beginEditing(initialValue?: string): void {\n    // Copy editor options.\n    this.options = {\n      // User specified editor options.\n      ...this.cellProperties.editorOptions\n    };\n\n    // Handle select2 data source.\n    if (this.options.data) {\n      // Create data adapter from existing data options.\n      this.options.dataAdapter = this.createDataAdapter(this.options);\n    } else if (this.options.dataAdapter) {\n      // Wrap existing adapter to give user access to cell properties.\n      this.options.dataAdapter = this.wrapDataAdapter(this.cellProperties);\n    }\n\n    // Mute and give control to editor.\n    this.instance.unlisten();\n\n    // Create editor DOM.\n    this.$editor = Editor.createEditorDOM();\n\n    // Create select DOM.\n    this.$select = Editor.createSelectDOM(this.options);\n\n    // Append select element to editor DOM.\n    this.$editor.find('.select2-content').append(this.$select);\n\n    // Create jQuery TD.\n    this.$TD = jQuery(this.TD);\n\n    // Empty cell.\n    this.$TD.empty();\n\n    // Append editor to cell.\n    this.$TD.append(this.$editor);\n\n    // Begin editing.\n    super.beginEditing(initialValue);\n  }\n\n  /**\n   * Editor open.\n   */\n  public open(): void {\n    // Initialize select2 plugin.\n    this.$select.select2(this.options);\n\n    // Open select2.\n    this.$select.select2('open');\n\n    // Register events.\n    this.registerEvents();\n  }\n\n  /**\n   * Finish editing.\n   * @param restore Restore original.\n   * @param ctrlDown Ctrl down key.\n   * @param callback Finish callback.\n   */\n  public finishEditing(restore?: boolean, ctrlDown?: boolean, callback?: () => void): void {\n    if (restore) {\n      this.setValue(this.originalValue);\n    }\n\n    super.finishEditing(restore, ctrlDown, callback);\n  }\n\n  /**\n   * Editor discard.\n   *\n   * @param validationResult Editor validation result.\n   */\n  public discardEditor(validationResult: boolean | undefined): void {\n    // Verify validation results.\n    if (validationResult || isNil(validationResult)) {\n      // Trigger event to finalize editor.\n      this.invokeEventHandler('apply');\n\n      // Refresh cell with new value.\n      this.refreshCell();\n\n      // Listen table after all finalized.\n      setTimeout(\n        (): void => {\n          this.instance.listen();\n        }\n      );\n    }\n\n    // Invoke base discard.\n    super.discardEditor(validationResult);\n  }\n\n  /**\n   * Editor close.\n   */\n  public close(): void {\n    // Destroy select2 on close.\n    if (this.isActive()) {\n      // Clean up listeners.\n      this.$select.off();\n\n      // Destroy Select2\n      this.$select.select2('destroy');\n    }\n\n    // Remove editor.\n    if (this.$editor) {\n      // Clean up listeners.\n      this.$editor.off();\n\n      // Remove editor.\n      this.$editor.remove();\n    }\n  }\n\n  /**\n   * Editor get value.\n   *\n   * @return Cell value.\n   */\n  public getValue(): null | undefined | any {\n    // Value operated by editor.\n    let editorValue: EditorValue = this.value;\n\n    // Handle value from single selection editor.\n    if (!this.options.multiple) {\n      // Unpack value for single select.\n      [editorValue = null] = editorValue || [];\n    }\n\n    // Revert back to original when values same without type checking.\n    // Needed to avoid changes from undefined to null.\n    if (isEqual(editorValue, this.originalValue)) {\n      editorValue = this.originalValue;\n    }\n\n    return Editor.outputValue(editorValue, this.cellProperties);\n  }\n\n  /**\n   * Editor set value.\n   *\n   * @param value Cell value.\n   */\n  public setValue(value: any): void {\n    // Compatible input value must be generated from original cell value.\n    this.value = compatValue(this.originalValue, this.cellProperties);\n  }\n\n  /**\n   * Editor save value.\n   *\n   * @param value Cell value.\n   * @param ctrlDown Control down.\n   */\n  public saveValue(value: any, ctrlDown: boolean): void {\n    const { visualRow, visualCol } = this.cellProperties;\n\n    // Set directly to cell without duckSchema.\n    this.instance.setDataAtCell(visualRow, visualCol, this.getValue(), 'edit');\n  }\n\n  /**\n   * Determine editor activeness.\n   *\n   * @return Editor active state.\n   */\n  public isActive(): boolean {\n    // Check select2 state.\n    return this.$select && this.$select.hasClass('select2-hidden-accessible');\n  }\n\n  /**\n   * Editor refresh value.\n   */\n  public refreshValue(): void {\n    // New value need to be refreshed in cell.\n    let value: any = this.instance.getDataAtCell(this.cellProperties.visualRow, this.cellProperties.visualCol);\n\n    // HT clean up without active editor.\n    if (!value && !this.isActive()) {\n      if (isEqual(this.originalValue, value)) {\n        value = this.originalValue;\n      } else {\n        value = Editor.outputValue(null, this.cellProperties);\n      }\n\n      // Current value\n      this.value = value;\n\n      // Assign new original value.\n      this.originalValue = value;\n\n      // Trigger event to finalize editor.\n      this.invokeEventHandler('apply');\n\n      // Refresh cell.\n      this.refreshCell();\n    }\n  }\n\n  /**\n   * Refresh editor.\n   */\n  public refreshEditor(): void {\n    this.triggerSelect2Event('change.select2');\n  }\n\n  /**\n   * Refresh query.\n   */\n  public refreshQuery(): void {\n    this.$select.select2('close');\n    this.$select.select2('open');\n  }\n\n  /**\n   * Refresh cell.\n   */\n  public refreshCell(): void {\n    const { visualRow, visualCol } = this.cellProperties;\n\n    // Retrieve cell renderer.\n    const renderer: Function = this.instance.getCellRenderer(visualRow, visualCol);\n\n    // Invoke renderer.\n    renderer(this.instance, this.TD, visualRow, visualCol, this.prop, this.value, this.cellProperties);\n  }\n\n  /**\n   * Trigger select2 event.\n   *\n   * @param name Event name.\n   */\n  public triggerSelect2Event(name: string): void {\n    if (this.isActive()) {\n      this.$select.trigger(name);\n    }\n  }\n\n  /**\n   * Create data adapter.\n   *\n   * @param options Select2 options.\n   * @return DataAdapter wrapper.\n   */\n  protected createDataAdapter(this: Editor, { data }: Options): any {\n    const getValue: Function = (): IdTextPair[] => this.value;\n\n    // Data adapter covers data option.\n    return class extends Adapter.DataArray {\n      // Retrieve current value.\n      public current(callback: (items: IdTextPair[]) => void): void {\n        callback(getValue());\n      }\n\n      public query(query: QueryOptions, callback: Function): void {\n        callback({ results: data });\n      }\n    };\n  }\n\n  /**\n   * Wrap data adapter to give access to cell properties.\n   *\n   * @param cellProperties Cell properties.\n   * @return DataAdapter wrapper.\n   */\n  protected wrapDataAdapter(this: Editor, cellProperties: EditorCell): new () => {} {\n    const getValue: Function = (): IdTextPair[] => this.value;\n\n    // Wrap adapter class.\n    return class extends cellProperties.editorOptions.dataAdapter {\n      // Retrieve current value.\n      public current(callback: (items: IdTextPair[]) => void): void {\n        callback(getValue());\n      }\n\n      // Call user specified dataAdapter query.\n      public query(query: QueryOptions, callback: Function): void {\n        super.query(getValue(), cellProperties, query, callback);\n      }\n    };\n  }\n\n  /**\n   * Register editor events.\n   */\n  protected registerEvents(): void {\n    // Select2 instance.\n    const instance: any = this.$select.data('select2');\n\n    // Catch instance keypress.\n    instance.on('keypress', (event: Event<Element, any>) => {\n      const { ESCAPE, TAB } = Handsontable.helper.KEY_CODES;\n\n      if (event.which === ESCAPE) {\n        this.finishEditing(true);\n      } else if (event.which === TAB) {\n        this.finishEditing();\n      }\n    });\n\n    // Register standard events.\n    this.$select\n      // Handle change in data.\n      .on('select2:select', this.selectedHandler.bind(this))\n      // Handle change in data.\n      .on('select2:unselect', this.unselectedHandler.bind(this))\n      // Handle open.\n      .on('select2:open', this.invokeEventHandler.bind(this, 'open'))\n      // Handle close.\n      .on('select2:close', (event: Event<Element, any>) => {\n        this.invokeEventHandler('close', event);\n      })\n      // Handle opening\n      .on('select2:opening', (event: Event<Element, any>) => {\n        // TODO-pk: Fix preventing.\n        this.invokeEventHandler('opening', event);\n      })\n      .on('select2:closing', (event: Event<Element, any>) => {\n        // TODO-pk: Fix preventing.\n        this.invokeEventHandler('closing', event);\n      })\n      // Handle changing in data.\n      .on('select2:selecting', (event: Event<Element, IngParams>) => {\n        // Data received from event.\n        // TODO-pk: Cast will be removed on select2@next release\n        const selectingItem: IdTextPairEvent = Editor.createEventItem((<any>event.params).args, true);\n\n        // Invoke event that can change value.\n        this.invokeEventHandler('selecting', event, selectingItem);\n      })\n      // Handle changing in data.\n      .on('select2:selecting', (event: Event<Element, IngParams>) => {\n        // Data received from event.\n        // TODO-pk: Cast will be removed on select2@next release\n        const unselectingItem: IdTextPairEvent = Editor.createEventItem((<any>event.params).args, false);\n\n        // Invoke event that can change value.\n        this.invokeEventHandler('unselecting', event, unselectingItem);\n      });\n  }\n\n  /**\n   * Handle select event from select2.\n   *\n   * @param event Event object.\n   */\n  protected selectedHandler(event: Event<Element, DataParams>): void {\n    // Editor options.\n    const { multiple } = this.options;\n\n    // Already selected item.\n    const selectedItem: IdTextPairEvent = Editor.createEventItem(event.params.data, true);\n\n    // Clean up value on single selection.\n    if (!multiple) {\n      this.value = [];\n    }\n\n    // Copy to create new value.\n    this.value = [...this.value, selectedItem];\n\n    // Invoke event that can change value.\n    this.invokeEventHandler('selected', event, selectedItem);\n\n    // After change handler.\n    this.afterChangeHandler();\n  }\n\n  /**\n   * Handle unselect event from select2.\n   *\n   * @param event Event object.\n   */\n  protected unselectedHandler(event: Event<Element, DataParams>): void {\n    // Already unselected item.\n    const unselectedItem: IdTextPairEvent = Editor.createEventItem(event.params.data, true);\n\n    // Remove item from array value.\n    this.value = this.value.filter(({ id }: IdTextPair) => {\n      return !isEqual(id, unselectedItem.id);\n    });\n\n    // Invoke event that can change value.\n    this.invokeEventHandler('unselected', event, unselectedItem);\n\n    // After change handler.\n    this.afterChangeHandler();\n  }\n\n  /**\n   * After change handler.\n   */\n  protected afterChangeHandler(): void {\n    // Editor options.\n    const { closeOnSelect, multiple } = this.options;\n\n    // Refresh editor after handler invoked.\n    this.refreshEditor();\n\n    // On single selection editor can be closed.\n    if (closeOnSelect) {\n      if (!multiple) {\n        this.finishEditing();\n      }\n    } else if (multiple) {\n      this.refreshQuery();\n    }\n  }\n\n  /**\n   * Invoke specified event handler.\n   *\n   * @param eventType Event type.\n   * @param args Handler arguments.\n   * @return Event output.\n   */\n  protected invokeEventHandler(eventType: string, ...args: any[]): void {\n    // Defined editor events.\n    const { editorEvents = {} } = this.cellProperties;\n\n    // Invoke only when handlers exist.\n    Object.keys(editorEvents).forEach((key: string) => {\n      const events: string[] = key.split(/\\s+/g);\n\n      for (const name of events) {\n        if (name === eventType && typeof editorEvents[key] === 'function') {\n          // Always include current value and cell properties\n          args.push(this.value, this.cellProperties);\n\n          // Invoke handler with specified arguments\n          editorEvents[key].apply(null, args);\n        }\n      }\n    });\n  }\n}\n","import Handsontable from 'handsontable';\nimport { IdTextPair } from 'select2';\nimport { EditorCell } from './config';\nimport { EditorValue } from './value';\nimport { compatValue, isNil } from './helper';\n\n/**\n * Default delimiter to merge multi selection.\n */\nconst DELIMITER: string = ', ';\n\n/**\n * Renderer used to generate cell HTMLElement.\n *\n * @example\n *\n *   □ column:\n *       type: 'select2'\n *\n *   □ column:\n *       renderer: 'Select2Renderer' | <Renderer>\n *\n *   □ cell:\n *       renderer: 'Select2Renderer' | <Renderer>\n *\n * @param instance Instance.\n * @param TD Table cell.\n * @param row Row index.\n * @param col Col index.\n * @param prop Property name.\n * @param value Cell value.\n * @param cellProperties Cell properties.\n * @return HTMLElement cell.\n * @author Oleksandr Dakal <oleksandr-dakal@project-kit.org>\n */\nexport function renderer(\n  instance: Handsontable,\n  TD: HTMLElement,\n  row: number,\n  col: number,\n  prop: string | number | any,\n  value: EditorValue,\n  cellProperties: EditorCell\n): HTMLElement {\n  // Specified delimiter.\n  const { delimiter = null } = cellProperties;\n\n  // Text displayed in the cell.\n  const txt: string = compatValue(value, cellProperties)\n    // Retrieve text from each item.\n    .map(({ text }: IdTextPair): string => text)\n    // Join by delimiter.\n    .join(isNil(delimiter) ? DELIMITER : delimiter);\n\n  // Base renderer.\n  return Handsontable.renderers.TextRenderer(instance, TD, row, col, prop, txt, cellProperties);\n}\n","import Handsontable from 'handsontable';\nimport { Editor } from './editor';\nimport { renderer } from './renderer';\n\n// Register editor.\n// TODO: Cast will be removed on HT@next release\n(<any>Handsontable.editors).registerEditor('Select2Editor', Editor);\n\n// Register renderer.\n// TODO: Cast will be removed on HT@next release\n(<any>Handsontable.renderers).registerRenderer('Select2Renderer', renderer);\n\n// Register cell.\n// TODO: Cast will be removed on HT@next release\n(<any>Handsontable.cellTypes).registerCellType('select2', {\n  editor: Editor,\n  renderer: renderer\n});\n","import Handsontable from 'handsontable';\nimport { Editor } from './editor';\nimport { isEqual } from './helper';\nimport { EditorValue } from './value';\n\n/**\n * Determine belonging of editor to <#Editor> type.\n *\n * @param editor Class to be checked.\n * @return True when editor extends Editor; false otherwise.\n */\nfunction isExtends(editor: any = {}): boolean {\n  // Editor prototype.\n  const { prototype = null } = editor;\n\n  // End of prototype chain.\n  if (!prototype) {\n    return false;\n  }\n\n  // Compare constructors or/and prototype instance.\n  return prototype.constructor === Editor || prototype instanceof Editor || isExtends(Object.getPrototypeOf(prototype));\n}\n\n/**\n * Before change handler to correctly clean up cell.\n *\n * @param changes HT changes.\n * @param source Change source.\n */\nfunction beforeChange(this: Handsontable, changes: any[][], source: string): void {\n  // Iterate changes to analyze cell metadata.\n  changes.forEach(\n    (change: any[]): void => {\n      // Retrieve editor class.\n      const editor: any = this.getCellEditor(change[0], this.propToCol(change[1]));\n\n      // New value to be set at cell.\n      const newVal: string | EditorValue | any = change[3];\n\n      // Verify editor to determine that it's suitable to change value to null.\n      if (newVal === '' && (isEqual(editor, Editor) || isExtends(editor))) {\n        // Replace change new value to null.\n        change[3] = null;\n      }\n    }\n  );\n}\n\n// Register global hook to correctly handle cell clean up.\n(<any>Handsontable.hooks).add('beforeChange', beforeChange);\n"],"names":["tslib_1.__extends","Adapter"],"mappings":"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"}